"""generate all tables

Revision ID: 59b148d59d07
Revises: 
Create Date: 2025-04-05 14:38:32.458751

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '59b148d59d07'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('jira_projects',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('jira_project_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('key', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('avatar_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_system_linked', sa.Boolean(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['jira_users.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_jira_projects_jira_project_id'), 'jira_projects', ['jira_project_id'], unique=True)
    op.create_index(op.f('ix_jira_projects_key'), 'jira_projects', ['key'], unique=True)
    op.create_index(op.f('ix_jira_projects_project_id'), 'jira_projects', ['project_id'], unique=True)
    op.create_index(op.f('ix_jira_projects_user_id'), 'jira_projects', ['user_id'], unique=False)
    op.create_table('sync_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('entity_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('entity_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('operation', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('request_payload', sa.JSON(), nullable=True),
    sa.Column('response_status', sa.Integer(), nullable=True),
    sa.Column('response_body', sa.JSON(), nullable=True),
    sa.Column('error_message', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('sender', sa.Integer(), nullable=True),
    sa.Column('source', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.CheckConstraint("entity_type IN ('ISSUE', 'PROJECT', 'SPRINT', 'USER')", name='valid_entity_type'),
    sa.CheckConstraint("operation IN ('CREATE', 'UPDATE', 'DELETE', 'SYNC')", name='valid_operation'),
    sa.CheckConstraint("source IN ('NATS', 'WEBHOOK', 'MANUAL')", name='valid_source'),
    sa.ForeignKeyConstraint(['sender'], ['jira_users.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('jira_issues',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('jira_issue_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('key', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('summary', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('priority_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('estimate_point', sa.Float(), nullable=False),
    sa.Column('actual_point', sa.Float(), nullable=True),
    sa.Column('project_key', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('reporter_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('last_synced_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_locally', sa.Boolean(), nullable=False),
    sa.Column('assignee_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_system_linked', sa.Boolean(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('link_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['assignee_id'], ['jira_users.jira_account_id'], ),
    sa.ForeignKeyConstraint(['project_key'], ['jira_projects.key'], ),
    sa.ForeignKeyConstraint(['reporter_id'], ['jira_users.jira_account_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key')
    )
    op.create_index(op.f('ix_jira_issues_jira_issue_id'), 'jira_issues', ['jira_issue_id'], unique=True)
    op.create_table('jira_sprints',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('jira_sprint_id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('state', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('complete_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('goal', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('board_id', sa.Integer(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('project_key', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['project_key'], ['jira_projects.key'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_jira_sprints_jira_sprint_id'), 'jira_sprints', ['jira_sprint_id'], unique=True)
    op.create_table('jira_issue_histories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('jira_issue_id', sa.String(), nullable=False),
    sa.Column('field_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('field_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('old_value', sa.Text(), nullable=True),
    sa.Column('new_value', sa.Text(), nullable=True),
    sa.Column('old_string', sa.Text(), nullable=True),
    sa.Column('new_string', sa.Text(), nullable=True),
    sa.Column('author_id', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('jira_change_id', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['jira_users.jira_account_id'], name='fk_jira_users'),
    sa.ForeignKeyConstraint(['jira_issue_id'], ['jira_issues.jira_issue_id'], name='fk_jira_issues'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('jira_issue_sprints',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('jira_issue_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('jira_sprint_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['jira_issue_id'], ['jira_issues.jira_issue_id'], ),
    sa.ForeignKeyConstraint(['jira_sprint_id'], ['jira_sprints.jira_sprint_id'], ),
    sa.PrimaryKeyConstraint('id', 'jira_issue_id', 'jira_sprint_id')
    )
    op.create_index(op.f('ix_jira_issue_sprints_id'), 'jira_issue_sprints', ['id'], unique=False)
    op.drop_index('ix_projects_jira_project_id', table_name='projects')
    op.drop_index('ix_projects_key', table_name='projects')
    op.drop_index('ix_projects_name', table_name='projects')
    op.drop_index('ix_projects_project_id', table_name='projects')
    op.drop_table('projects')
    op.add_column('jira_users', sa.Column('is_active', sa.Boolean(), nullable=False))
    op.add_column('jira_users', sa.Column('avatar_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('jira_users', sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.alter_column('jira_users', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_index(op.f('ix_jira_users_jira_account_id'), 'jira_users', ['jira_account_id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_jira_users_jira_account_id'), table_name='jira_users')
    op.alter_column('jira_users', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('jira_users', 'name')
    op.drop_column('jira_users', 'avatar_url')
    op.drop_column('jira_users', 'is_active')
    op.create_table('projects',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('jira_project_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('key', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('avatar_url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='projects_pkey')
    )
    op.create_index('ix_projects_project_id', 'projects', ['project_id'], unique=True)
    op.create_index('ix_projects_name', 'projects', ['name'], unique=True)
    op.create_index('ix_projects_key', 'projects', ['key'], unique=True)
    op.create_index('ix_projects_jira_project_id', 'projects', ['jira_project_id'], unique=True)
    op.drop_index(op.f('ix_jira_issue_sprints_id'), table_name='jira_issue_sprints')
    op.drop_table('jira_issue_sprints')
    op.drop_table('jira_issue_histories')
    op.drop_index(op.f('ix_jira_sprints_jira_sprint_id'), table_name='jira_sprints')
    op.drop_table('jira_sprints')
    op.drop_index(op.f('ix_jira_issues_jira_issue_id'), table_name='jira_issues')
    op.drop_table('jira_issues')
    op.drop_table('sync_logs')
    op.drop_index(op.f('ix_jira_projects_user_id'), table_name='jira_projects')
    op.drop_index(op.f('ix_jira_projects_project_id'), table_name='jira_projects')
    op.drop_index(op.f('ix_jira_projects_key'), table_name='jira_projects')
    op.drop_index(op.f('ix_jira_projects_jira_project_id'), table_name='jira_projects')
    op.drop_table('jira_projects')
    # ### end Alembic commands ###
