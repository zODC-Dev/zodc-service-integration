"""generate sync log table

Revision ID: 141d39f830b8
Revises: d446baa8a137
Create Date: 2025-03-20 22:31:11.105260

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '141d39f830b8'
down_revision: Union[str, None] = 'd446baa8a137'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sync_logs',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.Column('entity_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('entity_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('operation', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('request_payload', sa.JSON(), nullable=True),
                    sa.Column('response_status', sa.Integer(), nullable=True),
                    sa.Column('response_body', sa.JSON(), nullable=True),
                    sa.Column('error_message', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('sender', sa.Integer(), nullable=True),
                    sa.Column('source', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.CheckConstraint("entity_type IN ('ISSUE', 'PROJECT', 'SPRINT', 'USER')",
                                       name='valid_entity_type'),
                    sa.CheckConstraint("operation IN ('CREATE', 'UPDATE', 'DELETE', 'SYNC')", name='valid_operation'),
                    sa.CheckConstraint("source IN ('NATS', 'WEBHOOK', 'MANUAL')", name='valid_source'),
                    sa.ForeignKeyConstraint(['sender'], ['jira_users.user_id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    # op.drop_constraint('uq_project_key', 'jira_projects', type_='unique')
    # op.drop_constraint('uq_jira_account_id', 'jira_users', type_='unique')
    # op.drop_constraint('uq_user_id', 'jira_users', type_='unique')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint('uq_user_id', 'jira_users', ['user_id'])
    op.create_unique_constraint('uq_jira_account_id', 'jira_users', ['jira_account_id'])
    op.create_unique_constraint('uq_project_key', 'jira_projects', ['key'])
    op.drop_table('sync_logs')
    # ### end Alembic commands ###
