"""generate all tables

Revision ID: 9ff69d2d9e1c
Revises: 
Create Date: 2025-03-20 21:58:59.061707

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '9ff69d2d9e1c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # op.create_table('jira_sprints',
    # sa.Column('created_at', sa.DateTime(), nullable=False),
    # sa.Column('updated_at', sa.DateTime(), nullable=True),
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('jira_sprint_id', sa.Integer(), nullable=False),
    # sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    # sa.Column('state', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    # sa.Column('start_date', sa.DateTime(), nullable=True),
    # sa.Column('end_date', sa.DateTime(), nullable=True),
    # sa.Column('goal', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    # sa.Column('project_key', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    # sa.ForeignKeyConstraint(['project_key'], ['jira_projects.key'], ),
    # sa.PrimaryKeyConstraint('id')
    # )
    op.create_index(op.f('ix_jira_sprints_jira_sprint_id'), 'jira_sprints', ['jira_sprint_id'], unique=False)
    op.create_table('refresh_tokens',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('token', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('token_type', sa.Enum('MICROSOFT', 'JIRA', name='tokentype'), nullable=False),
                    sa.Column('expires_at', sa.DateTime(), nullable=False),
                    sa.Column('is_revoked', sa.Boolean(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.ForeignKeyConstraint(['user_id'], ['jira_users.user_id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_refresh_tokens_token'), 'refresh_tokens', ['token'], unique=True)
    op.add_column('jira_issues', sa.Column('sprint_id', sa.Integer(), nullable=True))
    op.create_index(op.f('ix_jira_issues_jira_issue_id'), 'jira_issues', ['jira_issue_id'], unique=True)
    op.create_unique_constraint(None, 'jira_issues', ['key'])
    op.create_foreign_key(None, 'jira_issues', 'jira_sprints', ['sprint_id'], ['id'])
    op.create_foreign_key(None, 'jira_issues', 'jira_users', ['reporter_id'], ['jira_account_id'])
    op.create_foreign_key(None, 'jira_issues', 'jira_users', ['assignee_id'], ['jira_account_id'])
    op.create_foreign_key(None, 'jira_issues', 'jira_projects', ['project_key'], ['key'])
    op.alter_column('jira_projects', 'is_jira_linked',
                    existing_type=sa.BOOLEAN(),
                    nullable=False)
    op.create_index(op.f('ix_jira_projects_jira_project_id'), 'jira_projects', ['jira_project_id'], unique=True)
    op.create_index(op.f('ix_jira_projects_key'), 'jira_projects', ['key'], unique=True)
    op.create_index(op.f('ix_jira_projects_name'), 'jira_projects', ['name'], unique=True)
    op.create_index(op.f('ix_jira_projects_project_id'), 'jira_projects', ['project_id'], unique=True)
    op.create_index(op.f('ix_jira_users_email'), 'jira_users', ['email'], unique=True)
    op.create_index(op.f('ix_jira_users_jira_account_id'), 'jira_users', ['jira_account_id'], unique=True)
    op.create_index(op.f('ix_jira_users_user_id'), 'jira_users', ['user_id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_jira_users_user_id'), table_name='jira_users')
    op.drop_index(op.f('ix_jira_users_jira_account_id'), table_name='jira_users')
    op.drop_index(op.f('ix_jira_users_email'), table_name='jira_users')
    op.drop_index(op.f('ix_jira_projects_project_id'), table_name='jira_projects')
    op.drop_index(op.f('ix_jira_projects_name'), table_name='jira_projects')
    op.drop_index(op.f('ix_jira_projects_key'), table_name='jira_projects')
    op.drop_index(op.f('ix_jira_projects_jira_project_id'), table_name='jira_projects')
    op.alter_column('jira_projects', 'is_jira_linked',
                    existing_type=sa.BOOLEAN(),
                    nullable=True)
    op.drop_constraint(None, 'jira_issues', type_='foreignkey')
    op.drop_constraint(None, 'jira_issues', type_='foreignkey')
    op.drop_constraint(None, 'jira_issues', type_='foreignkey')
    op.drop_constraint(None, 'jira_issues', type_='foreignkey')
    op.drop_constraint(None, 'jira_issues', type_='unique')
    op.drop_index(op.f('ix_jira_issues_jira_issue_id'), table_name='jira_issues')
    op.drop_column('jira_issues', 'sprint_id')
    op.drop_index(op.f('ix_refresh_tokens_token'), table_name='refresh_tokens')
    op.drop_table('refresh_tokens')
    op.drop_index(op.f('ix_jira_sprints_jira_sprint_id'), table_name='jira_sprints')
    op.drop_table('jira_sprints')
    # ### end Alembic commands ###
