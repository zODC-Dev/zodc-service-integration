"""add status to synclog

Revision ID: 88afc37dc49a
Revises: d2df6516092a
Create Date: 2025-04-04 14:13:05.017231

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '88afc37dc49a'
down_revision: Union[str, None] = 'd2df6516092a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_index('ix_users_email', table_name='users')
    # op.drop_index('ix_users_user_id', table_name='users')
    # op.drop_table('users')
    # op.drop_index('ix_media_media_id', table_name='media')
    # op.drop_table('media')
    # op.drop_index('ix_projects_jira_project_id', table_name='projects')
    # op.drop_index('ix_projects_key', table_name='projects')
    # op.drop_index('ix_projects_name', table_name='projects')
    # op.drop_index('ix_projects_project_id', table_name='projects')
    # op.drop_table('projects')
    # op.alter_column('jira_issue_histories', 'field_type',
    #            existing_type=sa.VARCHAR(),
    #            nullable=True)
    # op.alter_column('jira_issue_histories', 'old_value',
    #            existing_type=sa.VARCHAR(),
    #            type_=sa.Text(),
    #            existing_nullable=True)
    # op.alter_column('jira_issue_histories', 'new_value',
    #            existing_type=sa.VARCHAR(),
    #            type_=sa.Text(),
    #            existing_nullable=True)
    # op.alter_column('jira_issue_histories', 'old_string',
    #            existing_type=sa.VARCHAR(),
    #            type_=sa.Text(),
    #            existing_nullable=True)
    # op.alter_column('jira_issue_histories', 'new_string',
    #            existing_type=sa.VARCHAR(),
    #            type_=sa.Text(),
    #            existing_nullable=True)
    # op.drop_index('ix_jira_issue_histories_author_id', table_name='jira_issue_histories')
    # op.drop_index('ix_jira_issue_histories_created_at', table_name='jira_issue_histories')
    # op.drop_index('ix_jira_issue_histories_field_name', table_name='jira_issue_histories')
    # op.drop_index('ix_jira_issue_histories_jira_issue_id', table_name='jira_issue_histories')
    # op.drop_constraint('jira_issue_histories_jira_change_id_key', 'jira_issue_histories', type_='unique')
    # op.drop_constraint('uq_project_key', 'jira_projects', type_='unique')
    # op.drop_constraint('uq_jira_sprint_id', 'jira_sprints', type_='unique')
    # op.drop_constraint('uq_jira_account_id', 'jira_users', type_='unique')
    # op.drop_constraint('uq_user_id', 'jira_users', type_='unique')
    op.add_column('sync_logs', sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('sync_logs', 'status')
    op.create_unique_constraint('uq_user_id', 'jira_users', ['user_id'])
    op.create_unique_constraint('uq_jira_account_id', 'jira_users', ['jira_account_id'])
    op.create_unique_constraint('uq_jira_sprint_id', 'jira_sprints', ['jira_sprint_id'])
    op.create_unique_constraint('uq_project_key', 'jira_projects', ['key'])
    op.create_unique_constraint('jira_issue_histories_jira_change_id_key', 'jira_issue_histories', ['jira_change_id'])
    op.create_index('ix_jira_issue_histories_jira_issue_id', 'jira_issue_histories', ['jira_issue_id'], unique=False)
    op.create_index('ix_jira_issue_histories_field_name', 'jira_issue_histories', ['field_name'], unique=False)
    op.create_index('ix_jira_issue_histories_created_at', 'jira_issue_histories', ['created_at'], unique=False)
    op.create_index('ix_jira_issue_histories_author_id', 'jira_issue_histories', ['author_id'], unique=False)
    op.alter_column('jira_issue_histories', 'new_string',
                    existing_type=sa.Text(),
                    type_=sa.VARCHAR(),
                    existing_nullable=True)
    op.alter_column('jira_issue_histories', 'old_string',
                    existing_type=sa.Text(),
                    type_=sa.VARCHAR(),
                    existing_nullable=True)
    op.alter_column('jira_issue_histories', 'new_value',
                    existing_type=sa.Text(),
                    type_=sa.VARCHAR(),
                    existing_nullable=True)
    op.alter_column('jira_issue_histories', 'old_value',
                    existing_type=sa.Text(),
                    type_=sa.VARCHAR(),
                    existing_nullable=True)
    op.alter_column('jira_issue_histories', 'field_type',
                    existing_type=sa.VARCHAR(),
                    nullable=False)
    op.create_table('projects',
                    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
                    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
                    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
                    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=False),
                    sa.Column('jira_project_id', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.Column('key', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.Column('avatar_url', sa.VARCHAR(), autoincrement=False, nullable=True),
                    sa.PrimaryKeyConstraint('id', name='projects_pkey')
                    )
    op.create_index('ix_projects_project_id', 'projects', ['project_id'], unique=True)
    op.create_index('ix_projects_name', 'projects', ['name'], unique=True)
    op.create_index('ix_projects_key', 'projects', ['key'], unique=True)
    op.create_index('ix_projects_jira_project_id', 'projects', ['jira_project_id'], unique=True)
    op.create_table('media',
                    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
                    sa.Column('media_id', sa.UUID(), autoincrement=False, nullable=False),
                    sa.Column('filename', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.Column('blob_url', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.Column('content_type', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.Column('size', sa.INTEGER(), autoincrement=False, nullable=False),
                    sa.Column('uploaded_by', sa.INTEGER(), autoincrement=False, nullable=False),
                    sa.Column('container_name', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
                    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
                    sa.PrimaryKeyConstraint('id', name='media_pkey')
                    )
    op.create_index('ix_media_media_id', 'media', ['media_id'], unique=False)
    op.create_table('users',
                    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
                    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
                    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
                    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
                    sa.Column('jira_account_id', sa.VARCHAR(), autoincrement=False, nullable=True),
                    sa.Column('is_system_user', sa.BOOLEAN(), autoincrement=False, nullable=False),
                    sa.PrimaryKeyConstraint('id', name='users_pkey')
                    )
    op.create_index('ix_users_user_id', 'users', ['user_id'], unique=True)
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    # ### end Alembic commands ###
