"""generate project config

Revision ID: a15642f30e06
Revises: 5c420ac678c6
Create Date: 2025-04-25 15:51:45.932830

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a15642f30e06'
down_revision: Union[str, None] = '5c420ac678c6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('project_configs',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('project_key', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('system_config_id', sa.Integer(), nullable=False),
                    sa.Column('int_value', sa.Integer(), nullable=True),
                    sa.Column('float_value', sa.Float(), nullable=True),
                    sa.Column('string_value', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('bool_value', sa.Boolean(), nullable=True),
                    sa.Column('time_value', sa.Time(), nullable=True),
                    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
                    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
                    sa.ForeignKeyConstraint(['system_config_id'], ['system_configs.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('project_key', 'system_config_id',
                                        name='uq_project_configs_project_system_config')
                    )
    op.create_index(op.f('ix_project_configs_project_key'), 'project_configs', ['project_key'], unique=False)
    op.create_index(op.f('ix_project_configs_system_config_id'), 'project_configs', ['system_config_id'], unique=False)
    # op.alter_column('jira_issue_histories', 'jira_change_id',
    #            existing_type=sa.VARCHAR(length=100),
    #            nullable=False)
    # op.drop_index('ix_jira_issue_sprints_id', table_name='jira_issue_sprints')
    # op.drop_column('jira_issue_sprints', 'id')
    # op.alter_column('jira_projects', 'created_at',
    #                 existing_type=postgresql.TIMESTAMP(),
    #                 type_=sa.DateTime(timezone=True),
    #                 nullable=True)
    # op.alter_column('jira_projects', 'updated_at',
    #                 existing_type=postgresql.TIMESTAMP(),
    #                 type_=sa.DateTime(timezone=True),
    #                 existing_nullable=True)
    # op.alter_column('jira_users', 'created_at',
    #                 existing_type=postgresql.TIMESTAMP(),
    #                 type_=sa.DateTime(timezone=True),
    #                 nullable=True)
    # op.alter_column('jira_users', 'updated_at',
    #                 existing_type=postgresql.TIMESTAMP(),
    #                 type_=sa.DateTime(timezone=True),
    #                 existing_nullable=True)
    # op.drop_constraint('jira_users_uq_jira_account_id', 'jira_users', type_='unique')
    # op.alter_column('media', 'created_at',
    #                 existing_type=postgresql.TIMESTAMP(),
    #                 type_=sa.DateTime(timezone=True),
    #                 nullable=True)
    # op.alter_column('media', 'updated_at',
    #                 existing_type=postgresql.TIMESTAMP(),
    #                 type_=sa.DateTime(timezone=True),
    #                 existing_nullable=True)
    # op.alter_column('media', 'deleted_at',
    #                 existing_type=postgresql.TIMESTAMP(),
    #                 type_=sa.DateTime(timezone=True),
    #                 existing_nullable=True)
    # op.drop_index('ix_media_media_id', table_name='media')
    # op.create_index(op.f('ix_media_media_id'), 'media', ['media_id'], unique=True)
    # op.alter_column('refresh_tokens', 'created_at',
    #                 existing_type=postgresql.TIMESTAMP(),
    #                 type_=sa.DateTime(timezone=True),
    #                 nullable=True)
    # op.alter_column('sync_logs', 'created_at',
    #                 existing_type=postgresql.TIMESTAMP(),
    #                 type_=sa.DateTime(timezone=True),
    #                 nullable=True)
    # op.alter_column('sync_logs', 'updated_at',
    #                 existing_type=postgresql.TIMESTAMP(),
    #                 type_=sa.DateTime(timezone=True),
    #                 existing_nullable=True)
    # op.drop_index('ix_system_configs_id', table_name='system_configs')
    # op.drop_index('ix_system_configs_project_key', table_name='system_configs')
    # op.drop_constraint('uq_system_configs_key_scope_project', 'system_configs', type_='unique')
    # op.create_unique_constraint('uq_system_configs_key_scope', 'system_configs', ['key', 'scope'])
    # op.drop_column('system_configs', 'project_key')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('system_configs', sa.Column('project_key', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint('uq_system_configs_key_scope', 'system_configs', type_='unique')
    op.create_unique_constraint('uq_system_configs_key_scope_project',
                                'system_configs', ['key', 'scope', 'project_key'])
    op.create_index('ix_system_configs_project_key', 'system_configs', ['project_key'], unique=False)
    op.create_index('ix_system_configs_id', 'system_configs', ['id'], unique=False)
    op.alter_column('sync_logs', 'updated_at',
                    existing_type=sa.DateTime(timezone=True),
                    type_=postgresql.TIMESTAMP(),
                    existing_nullable=True)
    op.alter_column('sync_logs', 'created_at',
                    existing_type=sa.DateTime(timezone=True),
                    type_=postgresql.TIMESTAMP(),
                    nullable=False)
    op.alter_column('refresh_tokens', 'created_at',
                    existing_type=sa.DateTime(timezone=True),
                    type_=postgresql.TIMESTAMP(),
                    nullable=False)
    op.drop_index(op.f('ix_media_media_id'), table_name='media')
    op.create_index('ix_media_media_id', 'media', ['media_id'], unique=False)
    op.alter_column('media', 'deleted_at',
                    existing_type=sa.DateTime(timezone=True),
                    type_=postgresql.TIMESTAMP(),
                    existing_nullable=True)
    op.alter_column('media', 'updated_at',
                    existing_type=sa.DateTime(timezone=True),
                    type_=postgresql.TIMESTAMP(),
                    existing_nullable=True)
    op.alter_column('media', 'created_at',
                    existing_type=sa.DateTime(timezone=True),
                    type_=postgresql.TIMESTAMP(),
                    nullable=False)
    op.create_unique_constraint('jira_users_uq_jira_account_id', 'jira_users', ['jira_account_id'])
    op.alter_column('jira_users', 'updated_at',
                    existing_type=sa.DateTime(timezone=True),
                    type_=postgresql.TIMESTAMP(),
                    existing_nullable=True)
    op.alter_column('jira_users', 'created_at',
                    existing_type=sa.DateTime(timezone=True),
                    type_=postgresql.TIMESTAMP(),
                    nullable=False)
    op.alter_column('jira_projects', 'updated_at',
                    existing_type=sa.DateTime(timezone=True),
                    type_=postgresql.TIMESTAMP(),
                    existing_nullable=True)
    op.alter_column('jira_projects', 'created_at',
                    existing_type=sa.DateTime(timezone=True),
                    type_=postgresql.TIMESTAMP(),
                    nullable=False)
    op.add_column('jira_issue_sprints', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.create_index('ix_jira_issue_sprints_id', 'jira_issue_sprints', ['id'], unique=False)
    op.alter_column('jira_issue_histories', 'jira_change_id',
                    existing_type=sa.VARCHAR(length=100),
                    nullable=True)
    op.drop_index(op.f('ix_project_configs_system_config_id'), table_name='project_configs')
    op.drop_index(op.f('ix_project_configs_project_key'), table_name='project_configs')
    op.drop_table('project_configs')
    # ### end Alembic commands ###
