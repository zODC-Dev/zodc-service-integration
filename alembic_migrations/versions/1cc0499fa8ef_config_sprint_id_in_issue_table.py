"""config sprint id in issue table

Revision ID: 1cc0499fa8ef
Revises: a8c243129d87
Create Date: 2025-03-21 12:45:09.248998

"""
from enum import unique
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1cc0499fa8ef'
down_revision: Union[str, None] = 'a8c243129d87'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint('uq_jira_sprint_id', 'jira_sprints', ['jira_sprint_id'])
    op.alter_column('jira_issues', 'last_synced_at',
                    existing_type=postgresql.TIMESTAMP(),
                    type_=sa.DateTime(timezone=True),
                    existing_nullable=False)
    op.alter_column('jira_issues', 'sprint_id',
                    existing_type=sa.INTEGER(),
                    nullable=False)
    op.alter_column('jira_issues', 'created_at',
                    existing_type=postgresql.TIMESTAMP(),
                    type_=sa.DateTime(timezone=True),
                    existing_nullable=False)
    op.alter_column('jira_issues', 'updated_at',
                    existing_type=postgresql.TIMESTAMP(),
                    type_=sa.DateTime(timezone=True),
                    nullable=False)
    op.drop_constraint('jira_issues_sprint_id_fkey', 'jira_issues', type_='foreignkey')
    op.create_foreign_key(None, 'jira_issues', 'jira_sprints', ['sprint_id'], ['jira_sprint_id'])
    # op.drop_constraint('uq_project_key', 'jira_projects', type_='unique')
    op.drop_index('ix_jira_sprints_jira_sprint_id', table_name='jira_sprints')
    op.create_index(op.f('ix_jira_sprints_jira_sprint_id'), 'jira_sprints', ['jira_sprint_id'], unique=True)
    # op.drop_constraint('uq_jira_account_id', 'jira_users', type_='unique')
    # op.drop_constraint('uq_user_id', 'jira_users', type_='unique')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint('uq_user_id', 'jira_users', ['user_id'])
    op.create_unique_constraint('uq_jira_account_id', 'jira_users', ['jira_account_id'])
    op.drop_index(op.f('ix_jira_sprints_jira_sprint_id'), table_name='jira_sprints')
    op.create_index('ix_jira_sprints_jira_sprint_id', 'jira_sprints', ['jira_sprint_id'], unique=False)
    op.create_unique_constraint('uq_project_key', 'jira_projects', ['key'])
    op.drop_constraint(None, 'jira_issues', type_='foreignkey')
    op.create_foreign_key('jira_issues_sprint_id_fkey', 'jira_issues', 'jira_sprints', ['sprint_id'], ['id'])
    op.alter_column('jira_issues', 'updated_at',
                    existing_type=sa.DateTime(timezone=True),
                    type_=postgresql.TIMESTAMP(),
                    nullable=True)
    op.alter_column('jira_issues', 'created_at',
                    existing_type=sa.DateTime(timezone=True),
                    type_=postgresql.TIMESTAMP(),
                    existing_nullable=False)
    op.alter_column('jira_issues', 'sprint_id',
                    existing_type=sa.INTEGER(),
                    nullable=True)
    op.alter_column('jira_issues', 'last_synced_at',
                    existing_type=sa.DateTime(timezone=True),
                    type_=postgresql.TIMESTAMP(),
                    existing_nullable=False)
    # ### end Alembic commands ###
